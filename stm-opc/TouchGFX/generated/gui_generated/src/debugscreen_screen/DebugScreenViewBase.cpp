/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/debugscreen_screen/DebugScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


DebugScreenViewBase::DebugScreenViewBase() :
    buttonCallback(this, &DebugScreenViewBase::buttonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    backgroundBox.setPosition(0, 0, 800, 480);
    backgroundBox.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    getTimeButton.setXY(151, 180);
    getTimeButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    getTimeButton.setAction(buttonCallback);

    digitalClock.setPosition(49, 59, 375, 104);
    digitalClock.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    digitalClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BM3R));
    digitalClock.displayLeadingZeroForHourIndicator(true);
    digitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock.setTime24Hour(0, 0, 0);

    gauge.setBackground(touchgfx::Bitmap(BITMAP_BLUE_GAUGES_ORIGINAL_GAUGE_BACKGROUND_STYLE_01_ID));
    gauge.setPosition(466, 21, 251, 251);
    gauge.setCenter(125, 125);
    gauge.setStartEndAngle(-90, 90);
    gauge.setRange(0, 100);
    gauge.setValue(50);
    gauge.setEasingEquation(touchgfx::EasingEquations::linearEaseIn);
    gauge.setNeedle(BITMAP_BLUE_NEEDLES_ORIGINAL_GAUGE_NEEDLE_STYLE_00_ID, 11, 55);
    gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge.setArcVisible();
    gaugePainter.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    gauge.getArc().setPainter(gaugePainter);
    gauge.getArc().setRadius(93);
    gauge.getArc().setLineWidth(10);
    gauge.getArc().setCapPrecision(10);
    gauge.putArcOnTop();

    gaugeDescriptionText.setXY(498, 281);
    gaugeDescriptionText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    gaugeDescriptionText.setLinespacing(0);
    gaugeDescriptionText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7NIY));

    add(__background);
    add(backgroundBox);
    add(getTimeButton);
    add(digitalClock);
    add(gauge);
    add(gaugeDescriptionText);
}

void DebugScreenViewBase::setupScreen()
{

}

void DebugScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &getTimeButton)
    {
        //getTimeButton
        //When getTimeButton clicked call virtual function
        //Call getTime
        getTime();
    }
}
